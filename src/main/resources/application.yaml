server:
  port: 9090
#  ssl:
#    key-alias: hikari
#    key-store: classpath:hikari.jks
#    key-store-type: JKS
#    key-password: hikari29
    
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hikari-oauth2?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: root
    password: 
  jpa:
    show-sql: true
    hibernate: 
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 738026155235-jbudj3uo3j7hipu2ium77grr7lff3e3r.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 728739004898859
            clientSecret: 3235202b74e743332718134c34cfd3a4
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 24dda922fde023780703
            clientSecret: 44d3223170444641ec73be8539856951a31f9945
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorization-uri: https://www.facebook.com/v3.2/dialog/oauth
            token-uri: https://graph.facebook.com/v3.2/oauth/access_token
            user-info-uri: https://graph.facebook.com/v3.2/me?fields=id,first_name,last_name,name,email,picture.width(250).height(250)
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:9090
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:9090/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect